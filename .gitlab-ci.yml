image: naskpl/docker-compose

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_DRIVER: overlay2

services:
  - naskpl/dind

stages:
  - build
  - test

before_script:
  - echo "Start job $CI_BUILD_NAME" at `date +%Y-%m-%d-%H-%M-%S`
  - echo "CI_PIPELINE_ID $CI_PIPELINE_ID"
  - mkdir -p artifacts/test
  - docker info
  - docker login -u $DOCKER_REGISTRY_LOGIN -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY

build_images:
  stage: build
  script:
    - docker pull $DOCKER_REGISTRY/mquery_ursadb_build:latest || true
    - docker pull $DOCKER_REGISTRY/mquery_ursadb:latest || true
    - docker pull $DOCKER_REGISTRY/mquery_web:latest || true
    - docker pull $DOCKER_REGISTRY/mquery_daemon:latest || true
    - docker pull $DOCKER_REGISTRY/mquery_tests:latest || true
    - docker build --target build --cache-from $DOCKER_REGISTRY/mquery_ursadb_build:latest -t $DOCKER_REGISTRY/mquery_ursadb_build:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/mquery_ursadb_build:latest ursadb
    - docker build --cache-from $DOCKER_REGISTRY/mquery_ursadb_build:latest --cache-from $DOCKER_REGISTRY/mquery_ursadb:latest -t $DOCKER_REGISTRY/mquery_ursadb:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/mquery_ursadb:latest ursadb
    - docker build --cache-from $DOCKER_REGISTRY/mquery_web:latest -t $DOCKER_REGISTRY/mquery_web:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/mquery_web:latest -f Dockerfile-webapp .
    - docker build --cache-from $DOCKER_REGISTRY/mquery_daemon:latest -t $DOCKER_REGISTRY/mquery_daemon:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/mquery_daemon:latest -f Dockerfile-daemon .
    - docker build --cache-from $DOCKER_REGISTRY/mquery_tests:latest -t $DOCKER_REGISTRY/mquery_tests:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/mquery_tests:latest tests
    - docker images
    - docker push $DOCKER_REGISTRY/mquery_web:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/mquery_daemon:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/mquery_ursadb_build:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/mquery_ursadb:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/mquery_tests:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/mquery_web:latest
    - docker push $DOCKER_REGISTRY/mquery_daemon:latest
    - docker push $DOCKER_REGISTRY/mquery_ursadb_build:latest
    - docker push $DOCKER_REGISTRY/mquery_ursadb:latest
    - docker push $DOCKER_REGISTRY/mquery_tests:latest
  after_script:
    - docker-compose down | true

test_mquery:
  stage: test
  script:
    - SECRET_KEY=$(date +%s | sha256sum | base64 | head -c 32)
    - echo "SECRET_KEY=$SECRET_KEY" >> .env
    - docker pull redis
    - docker pull $DOCKER_REGISTRY/mquery_web:$CI_PIPELINE_ID
    - docker pull $DOCKER_REGISTRY/mquery_daemon:$CI_PIPELINE_ID
    - docker pull $DOCKER_REGISTRY/mquery_ursadb:$CI_PIPELINE_ID
    - docker pull $DOCKER_REGISTRY/mquery_tests:$CI_PIPELINE_ID
    - docker tag $DOCKER_REGISTRY/mquery_web:$CI_PIPELINE_ID mquery_web:latest
    - docker tag $DOCKER_REGISTRY/mquery_daemon:$CI_PIPELINE_ID mquery_daemon:latest
    - docker tag $DOCKER_REGISTRY/mquery_ursadb:$CI_PIPELINE_ID mquery_ursadb:latest
    - docker tag $DOCKER_REGISTRY/mquery_tests:$CI_PIPELINE_ID mquery_tests:latest
    - docker-compose up -d
    - docker run --net mquery_default -v mquery_samples:/mnt/samples mquery_tests
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - artifacts/test/startup.log
    when: always
    expire_in: 1 week
  after_script:
    - docker-compose logs -t
    - docker-compose logs -t > artifacts/test/startup.log
    - docker-compose down | true
